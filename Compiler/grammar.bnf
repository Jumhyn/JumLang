<program>         ::= <functions>

<functions>       ::= <function> <functions>
                    | eps
                  
<function>        ::= "[" <type-or-void> <identifier> ":" <arg-list> "]" <block>

<type-or-void>    ::= <type>
                    | "void"
                  
<type>            ::= "int"
                    | "float"
                    | "bool"
                  
<identifier>      ::= [a-zA-z]+

<arg-list>        ::= <arg-list-comm> <type> <identifier>
                    | eps
                  
<arg-list-comm>   ::= <type> <identifier> "," <arg-list-comm>
                    | eps
                  
<block>           ::= "{" <sequence> "}"

<sequence>        ::= <statement> <sequence>
                    | eps
                  
<statement>       ::= <if-statement>
                    | <while-statement>
                    | <do-statement>
                    | <ret-statement>
                    | <block>
                    | <assignment>
                    | <declaration>
                    | <call>
                  
<if-statement>    ::= "if" <expression> <statement>

<while-statement> ::= "while" <expression> <statement>

<do-statement>    ::= "do" <statement> "while" <expression> ";"

<ret-statement>   ::= "return" <opt-expression> ";"

<opt-expression>  ::= <expression>
                    | eps
                    
<assignment>      ::= <identifier> "=" <or> ";"
                    
<declaration>     ::= <type> <identifier> ";"
                    | <type> <assignment> ";"

<or>              ::= <and> "||" <or>
                    | <and>
                    
<and>             ::= <equality> "&&" <and>
                    | <equality>
                    
<equality>        ::= <inequality> <equality-op> <equality>
                    | <inequality>
                    
<equality-op>     ::= "=="
                    | "!="
                    
<inequality>      ::= <addition> <inequality-op> <inequality>
                    | <addition>
                    
<inequality-op>   ::= ">"
                    | "<"
                    | ">="
                    | "<="
                    
<addition>        ::= <multiplication> <addition-op> <addition>
                    | <addition>
                    
<addition-op>     ::= "+"
                    | "-"
                    
<multiplication>  ::= <unary> <mult-op> <multiplication>
                    | <unary>
                    
<mult-op>         ::= "*"
                    | "/"
                    
<unary>           ::= "-" <unary>
                    | "!" <unary>
                    | <expression>
                    
<expression>      ::= "(" <or> ")"
                    | <constant>
                    | <identifier>
                    | <call>
                    
<call>            ::= "[" <identifier> ":" <args> "]"

<args>            ::= <args-comma> <or>
                    | eps
                    
<args-comma>      ::= <or> "," <args-comma>
                    | eps
                    
<constant>        ::= "true"
                    | "false"
                    | <float-constant>
                    | <int-constant>
                    
<float-constant>  ::= <int-constant>(.)[0-9]+

<int-constant>    ::= [0-9]+

